substitutions:
  _TF_ENV: 'dev'
  _TF_STATE_BUCKET_NAME: 'gorillaclinic-dev-tf-state'
  _AR_REPO_NAME: 'gorilla_clinic'
  _TRIGGER_APPLY: 'true'
  _TF_DIR: 'gorillaclinic-terraform/environments/dev'

options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Step 1: Terraform format check
  - id: 'terraform-fmt-check'
    name: 'hashicorp/terraform:1.7.5'
    args: ['fmt', '-check', '-recursive']
    dir: 'gorillaclinic-terraform/environments/${_TF_ENV}'

  # Step 2: Terraform Lint
  - id: 'terraform-lint'
    name: 'ghcr.io/terraform-linters/tflint'
    entrypoint: 'sh'
    args: ['-c', 'tflint']
    dir: 'gorillaclinic-terraform/environments/${_TF_ENV}'


  # Step 3: Terraform initialization
  - id: 'terraform-init'
    name: 'hashicorp/terraform:1.7.5'
    args: [
      'init',
      '-backend-config=bucket=${_TF_STATE_BUCKET_NAME}',
      '-backend-config=prefix=terraform/state/${_TF_ENV}'
    ]
    dir: 'gorillaclinic-terraform/environments/${_TF_ENV}'
    env:
      - 'TF_VAR_project_id=assessment-shabadh'
      - 'TF_VAR_ar_repo_name=gorilla_clinic'

  # Step 4: Terraform validate
  - id: 'terraform-validate'
    name: 'hashicorp/terraform:1.7.5'
    args: ['validate']
    dir: 'gorillaclinic-terraform/environments/${_TF_ENV}'
    env:
      - 'TF_VAR_project_id=assessment-shabadh'
      - 'TF_VAR_ar_repo_name=gorilla_clinic'

  # Step 5: Terraform plan
  - id: 'terraform-plan'
    name: 'hashicorp/terraform:1.7.5'
    args: ['plan', '-out=tfplan', '-input=false', '-var-file=${_TF_ENV}.tfvars']
    dir: 'gorillaclinic-terraform/environments/${_TF_ENV}'
    env:
      - 'TF_VAR_project_id=assessment-shabadh'
      - 'TF_VAR_ar_repo_name=gorilla_clinic'

  # Step 6: Conditional Terraform apply
  - id: 'terraform-apply'
    name: 'hashicorp/terraform:1.7.5'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "TRIGGER_APPLY is ${_TRIGGER_APPLY}"
        if [ "${_TRIGGER_APPLY}" = "true" ]; then
          echo "Applying Terraform plan for ${_TF_ENV}..."
          terraform apply -input=false tfplan || { echo "Terraform apply failed"; exit 1; }
        else
          echo "Skipping Terraform apply for ${_TF_ENV} (plan-only mode)."
        fi
    dir: 'gorillaclinic-terraform/environments/${_TF_ENV}'
    env:
      - 'TF_VAR_project_id=assessment-shabadh'
      - 'TF_VAR_ar_repo_name=gorilla_clinic'
    waitFor: ['terraform-plan']
    
  # Step 7: Artifacts Upload
artifacts:
  objects:
    location: 'gs://${_TF_STATE_BUCKET_NAME}/plans/${BUILD_ID}'
    paths: ['${_TF_DIR/tfplan}']